name: Release on Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 🛡 Fail if tag and package.json version mismatch
      - name: Verify tag matches package.json version
        run: |
          TAG="${GITHUB_REF_NAME}"              # e.g. v1.2.3
          VERSION="${TAG#v}"                    # strip leading 'v'
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "Tag version: $VERSION"
          echo "package.json version: $PKG_VERSION"
          if [ "$VERSION" != "$PKG_VERSION" ]; then
            echo "❌ Version mismatch — updating package.json to $VERSION"
            npm version "$VERSION" --no-git-tag-version
          else
            echo "✅ Versions match"
          fi

      - name: Generate changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: other,perf

      - name: Prepend to CHANGELOG.md
        run: |
          NEW_CHANGELOG="## ${{ github.ref_name }}\n\n${{ steps.changelog.outputs.changelog }}\n"
          if [ -f CHANGELOG.md ]; then
            cp CHANGELOG.md OLD_CHANGELOG.md
            echo -e "$NEW_CHANGELOG\n$(cat OLD_CHANGELOG.md)" > CHANGELOG.md
          else
            echo -e "$NEW_CHANGELOG" > CHANGELOG.md
          fi

      - name: Commit and push version + CHANGELOG.md
        uses: EndBug/add-and-commit@v9
        with:
          add: |
            package.json
            CHANGELOG.md
          message: "chore(release): ${{ github.ref_name }} — update package.json & CHANGELOG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Update npm
        run: npm install -g npm@latest

      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
